{"version":3,"sources":["components/navbar/navbar.component.js","components/driver/url.service.js","components/driver/driver.component.js","components/driver-details/driver-details.component.js","components/drivers/drivers.component.js","config/views.js","stores/driver-model.js","stores/store.js","stores/drivers-store.js","utils.js","drivers.service.js","components/app/app.component.js","index.js"],"names":["Nav","react_default","a","createElement","className","type","placeholder","defaultProfileImage","Driver","e","target","onerror","src","url","_this$props","this","props","store","_this$props$data","data","isIntersecting","id","setIntersecting","goTo","router","profile_image","name","company_name","phone","email","backgroundImage","indexOf","replace","es","onChange","rootMargin","onClick","views","driverDetails","onError","onImageError","alt","xlinkHref","Component","inject","observer","DriverDetails","params","driverArr","app","drivers","filter","driver","length","dist","view","home","error","message","loaded","Fragment","driver_component","Drivers","map","Object","assign","key","Route","path","component","drivers_component","driver_details_component","DriverModel","_this","classCallCheck","action","extendObservable","DriversStore","loadDrivers","i","random","uuid","Math","toString","push","fetch","then","response","json","forEach","createDriverModel","catch","RouterStore","startRouter","App","index_module","ReactDOM","render","app_component_App","document","getElementById"],"mappings":"iSAGe,SAASA,IACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,YAAY,gCCRjCC,EAAsB,sGCWtBC,uLACWC,GACTA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOE,IDDNL,mCCIE,IDfaM,ECebC,EAC6DC,KAAKC,MAA/DC,EADHH,EACGG,MADHC,EAAAJ,EACUK,YADV,IAAAD,EACiB,GADjBA,EACqBE,EADrBN,EACqBM,eAAgBC,EADrCP,EACqCO,GAAIC,EADzCR,EACyCQ,gBAC5BC,EAAWN,EAArBO,OAAUD,KACVE,EAAoDN,EAApDM,cAAeC,EAAqCP,EAArCO,KAAMC,EAA+BR,EAA/BQ,aAAcC,EAAiBT,EAAjBS,MAAOC,EAAUV,EAAVU,MAC5CC,GDnBYjB,ECmBgBY,IDflCZ,EAAIkB,QAAQ,SAAW,IACvBlB,EAAMA,EAAImB,QAAQ,OAAQ,UAEvBnB,GALIN,ECmBP,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAUC,SAAU,SAACzB,GAAD,OAAOA,EAAEW,gBAAkBE,KAAmBa,WAAW,aACzElC,EAAAC,EAAAC,cAAA,OACIiC,QAAS,kBAAMb,EAAKc,EAAMC,cAAe,CAAEjB,GAAIA,GAAMJ,KACpDG,GACGnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKS,IAAKkB,EAAiBS,QAASxB,KAAKyB,aAAcpC,UAAU,YAC5DqC,IAAI,kBAGjBxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,oBAGvBzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQsB,GACvBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQuB,GACvB1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACVwB,GAAS3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,iBAAsCwB,GAC/CC,GAAS5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,UAA+ByB,cAhChDc,aAiDNC,mBAAO,QAAPA,CAAgBC,mBAASrC,ICpDlCsC,2LACO,IACG7B,EAAUF,KAAKC,MAAfC,MACU8B,EAAa9B,EAAvBO,OAAUuB,OAEZC,EAAY/B,EAAMgC,IAAIC,QAAQC,OAAO,SAAAC,GAAM,OAAIA,EAAO/B,KAAO0B,EAAO1B,KAC1E,IAAK2B,EAAUK,OACX,OAAOpD,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAACmD,EAAA,KAAD,CAAMC,KAAMlB,EAAMmB,KAAMvC,MAAOA,GAA/B,oBACAhB,EAAAC,EAAAC,cAAA,mCAGR,IAAMiD,EAASJ,EAAU,GAEzB,OACI/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVa,EAAMgC,IAAIQ,OAASxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,UAA+Ba,EAAMgC,IAAIQ,MAAMC,SAClEzC,EAAMgC,IAAIU,SAAW1C,EAAMgC,IAAIQ,OAC5BxD,EAAAC,EAAAC,cAACF,EAAAC,EAAM0D,SAAP,KACI3D,EAAAC,EAAAC,cAACmD,EAAA,KAAD,CAAMC,KAAMlB,EAAMmB,KAAMvC,MAAOA,GAA/B,oBACAhB,EAAAC,EAAAC,cAAC0D,EAAWT,YApBRT,cAgCbC,mBAAO,QAAPA,CAAgBC,mBAASC,ICjClCgB,2LACO,IACG7C,EAAUF,KAAKC,MAAfC,MAER,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACTa,EAAMgC,IAAIU,QAAU1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,cACrBa,EAAMgC,IAAIQ,OAASxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,UAA+Ba,EAAMgC,IAAIQ,MAAMC,SAClEzC,EAAMgC,IAAIU,SAAW1C,EAAMgC,IAAIQ,OAC5BxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVa,EAAMgC,IAAIC,QAAQG,OAASpC,EAAMgC,IAAIC,QAAQa,IAAI,SAAAX,GAAM,OACpDnD,EAAAC,EAAAC,cAAC0D,EAADG,OAAAC,OAAA,CAAQC,IAAKd,EAAO/B,IAAQ+B,MAC5B,2CAbVT,cA0BPC,mBAAO,QAAPA,CAAgBC,mBAASiB,ICfzBzB,EAXD,CACVmB,KAAM,IAAIW,QAAM,CACZC,KAAM,IACNC,UAAWpE,EAAAC,EAAAC,cAACmE,EAAD,QAEfhC,cAAe,IAAI6B,QAAM,CACrBC,KAAM,cACNC,UAAWpE,EAAAC,EAAAC,cAACoE,EAAD,oBCGJC,EAdX,SAAAA,EAAYvD,EAAOE,EAAME,GAAI,IAAAoD,EAAA1D,KAAAiD,OAAAU,EAAA,EAAAV,CAAAjD,KAAAyD,GAAAzD,KAS7BO,gBAAkBqD,iBAAO,WACrBF,EAAKrD,gBAAiB,IARtBL,KAAKI,KAAOA,EACZJ,KAAKM,GAAKA,EACVuD,2BAAiB7D,KAAM,CACnBK,gBAAgB,SCAbH,EALD,CACVgC,IAAK,eCEL,SAAA4B,IAAeb,OAAAU,EAAA,EAAAV,CAAAjD,KAAA8D,GACXD,2BAAiB7D,KAAM,CACnBmC,QAAS,GACTS,QAAQ,EACRF,MAAO,KAGX1C,KAAK+D,4EAGS3D,GACd,IAAMiC,EAAS,IAAIoB,EAAYzD,KAAMI,ECjBtC,WAEH,IAAI4D,EAAGC,EACHC,EAAO,GAEX,IAAKF,EAAI,EAAGA,EAAI,GAAIA,IAChBC,EAAyB,GAAhBE,KAAKF,SAAgB,EACpB,IAAND,GAAiB,KAANA,GAAkB,KAANA,GAAkB,KAANA,IACnCE,GAAQ,KAEZA,IAAe,KAANF,EAAW,EAAW,KAANA,EAAqB,EAATC,EAAa,EAAKA,GAClDG,SAAS,IAGlB,OAAOF,EDGwCA,IAC3ClE,KAAKmC,QAAQkC,KAAKhC,yCAGR,IAAAqB,EAAA1D,KEpBPsE,MAAM,iDACRC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SFqBtBF,KAAK,SAAApC,GACFA,EAAQuC,QAAQ,SAAArC,GAAM,OAAIqB,EAAKiB,kBAAkBtC,KACjDqB,EAAKd,QAAS,IAEjBgC,MAAM,SAAAlC,GACHgB,EAAKd,QAAS,EACdc,EAAKhB,MAAQA,cDxBzBjC,OAAQ,IAAIoE,eIIhBC,sBAAYxD,EAAOpB,OAEE6E,mLAEb,OACI7F,EAAAC,EAAAC,cAAC4F,EAAA,SAAD,CAAU9E,MAAOA,GACbhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACmD,EAAA,WAAD,eANaX,aCLjCqD,IAASC,OACLhG,EAAAC,EAAAC,cAAC+F,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5ef6be68.chunk.js","sourcesContent":["import React from 'react';\r\nimport './navbar.style.scss'\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"title\">Contact List</div>\r\n      <div className=\"search\">\r\n        <input type=\"text\" placeholder=\"Search\"></input>\r\n      </div>\r\n    </div>\r\n  )\r\n}","const defaultProfileImage = 'https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png';\n\nexport function secureUrl(url) {\n    if (!url) {\n        return defaultProfileImage;\n    }\n    if (url.indexOf('https') < 0) {\n        url = url.replace('http', 'https');\n    }\n    return url;\n}\n\nexport function getDefaultImg() {\n    return defaultProfileImage\n}\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'intersection-observer'; // optional polyfill\r\nimport Observer from '@researchgate/react-intersection-observer';\r\nimport { inject, observer } from 'mobx-react';\r\nimport views from '../../config/views';\r\nimport {secureUrl, getDefaultImg} from './url.service';\r\n\r\nimport './driver.style.scss';\r\n\r\n\r\nclass Driver extends Component {\r\n    onImageError(e) {\r\n        e.target.onerror = null;\r\n        e.target.src = getDefaultImg();\r\n    }\r\n\r\n    render() {\r\n        const { store, data = {}, isIntersecting, id, setIntersecting } = this.props;\r\n        const { router: { goTo } } = store;\r\n        const { profile_image, name, company_name, phone, email } = data;\r\n        const backgroundImage = secureUrl(profile_image);\r\n\r\n        return (\r\n            <div className=\"driver\">\r\n                <Observer onChange={(e) => e.isIntersecting && setIntersecting()} rootMargin=\"0% 0% 25%\">\r\n                    <div\r\n                        onClick={() => goTo(views.driverDetails, { id: id }, store)}>\r\n                        {isIntersecting && (\r\n                            <div className=\"image\">\r\n                                <img src={backgroundImage} onError={this.onImageError} className=\"img-fluid\"\r\n                                     alt=\"Driver Iamge\"></img>\r\n                            </div>\r\n                        )}\r\n                        <div className=\"driverType\">\r\n                            <svg>\r\n                                <use xlinkHref=\"#professional\" />\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"name\">{name}</div>\r\n                        <div className=\"rank\">{company_name}</div>\r\n                        <div className=\"more\">\r\n                            {phone && <div className=\"phone\">Phone Number: {phone}</div>}\r\n                            {email && <div className=\"email\">Email: {email}</div>}\r\n                        </div>\r\n                    </div>\r\n                </Observer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDriver.propTypes = {\r\n    store: PropTypes.object.isRequired,\r\n    data: PropTypes.object,\r\n    isIntersecting: PropTypes.bool.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    setIntersecting: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default inject('store')(observer(Driver));\r\n","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'mobx-router';\r\nimport Driver from '../driver/driver.component';\r\nimport views from '../../config/views';\r\nimport './driver-details.style.scss';\r\n\r\nclass DriverDetails extends Component {\r\n    render() {\r\n        const { store } = this.props;\r\n        const { router: { params } } = store;\r\n\r\n        const driverArr = store.app.drivers.filter(driver => driver.id === params.id);\r\n        if (!driverArr.length) {\r\n            return <div>\r\n                <Link view={views.home} store={store}> Go to Home Page</Link>\r\n                <div>Error 404 Not Found</div>\r\n            </div>;\r\n        }\r\n        const driver = driverArr[0];\r\n\r\n        return (\r\n            <div className=\"driver-details\">\r\n                {store.app.error && <div className=\"error\">Error: {store.app.error.message}</div>}\r\n                {store.app.loaded && !store.app.error && (\r\n                    <React.Fragment>\r\n                        <Link view={views.home} store={store}> Go to Home Page</Link>\r\n                        <Driver {...driver} />\r\n                    </React.Fragment>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDriverDetails.propTypes = {\r\n    store: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default inject('store')(observer(DriverDetails));\r\n","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport PropTypes from 'prop-types';\r\nimport Driver from '../driver/driver.component';\r\n\r\nimport './drivers.style.scss';\r\n\r\nclass Drivers extends Component {\r\n    render() {\r\n        const { store } = this.props;\r\n\r\n        return (\r\n            <div className=\"drivers\">\r\n                <div className=\"contact-list\">\r\n                    {!store.app.loaded && <div className=\"loader\">Loading...</div>}\r\n                    {store.app.error && <div className=\"error\">Error: {store.app.error.message}</div>}\r\n                    {store.app.loaded && !store.app.error && (\r\n                        <div className=\"drivers-container\">\r\n                            {store.app.drivers.length ? store.app.drivers.map(driver =>\r\n                                <Driver key={driver.id} {...driver} />\r\n                            ) : 'No Available Drivers Found :-('}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDrivers.propTypes = {\r\n    store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default inject('store')(observer(Drivers));\r\n","import React from 'react';\r\n//models\r\nimport { Route } from 'mobx-router';\r\n//components\r\nimport DriverDetails from '../components/driver-details/driver-details.component';\r\nimport Drivers from '../components/drivers/drivers.component.js'\r\n\r\nconst views = {\r\n    home: new Route({\r\n        path: '/',\r\n        component: <Drivers />\r\n    }),\r\n    driverDetails: new Route({\r\n        path: '/driver/:id',\r\n        component: <DriverDetails />\r\n    })\r\n};\r\n\r\nexport default views;\r\n","import { action, extendObservable } from 'mobx';\n\nclass DriverModel {\n    constructor(store, data, id) {\n        //this.drivers = store;\n        this.data = data;\n        this.id = id;\n        extendObservable(this, {\n            isIntersecting: false,\n        });\n    }\n\n    setIntersecting = action(() => {\n        this.isIntersecting = true;\n    });\n}\n\nexport default DriverModel;\n","import {RouterStore} from 'mobx-router';\nimport DriversStore from './drivers-store';\n\nconst store = {\n    app: new DriversStore(),\n    router: new RouterStore()\n};\n\nexport default store;\n","import { extendObservable } from 'mobx';\nimport { getDrivers } from '../drivers.service';\nimport DriverModel from './driver-model';\nimport { uuid } from '../utils';\n\nclass DriversStore {\n    constructor() {\n        extendObservable(this, {\n            drivers: [],\n            loaded: false,\n            error: '',\n        });\n\n        this.loadDrivers();\n    }\n\n    createDriverModel(data) {\n        const driver = new DriverModel(this, data, uuid());\n        this.drivers.push(driver);\n    }\n\n    loadDrivers() {\n        getDrivers()\n            .then(drivers => {\n                drivers.forEach(driver => this.createDriverModel(driver));\n                this.loaded = true;\n            })\n            .catch(error => {\n                this.loaded = true;\n                this.error = error;\n            });\n    }\n}\n\nexport default DriversStore;\n","export function\tuuid() {\n    /*jshint bitwise:false */\n    var i, random;\n    var uuid = '';\n\n    for (i = 0; i < 32; i++) {\n        random = Math.random() * 16 | 0;\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            uuid += '-';\n        }\n        uuid += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random))\n            .toString(16);\n    }\n\n    return uuid;\n}\n","export function getDrivers() {\r\n    return fetch('https://candidate-test.herokuapp.com/contacts')\r\n        .then(response => response.json())\r\n}\r\n","import React, { Component } from 'react';\nimport { Provider } from 'mobx-react';\nimport { MobxRouter, startRouter } from 'mobx-router';\nimport Nav from '../navbar/navbar.component';\n\n//stores\nimport views from '../../config/views';\nimport store from '../../stores/store';\n\nstartRouter(views, store);\n\nexport default class App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <div>\n                    <Nav />\n                    <MobxRouter />\n                </div>\n            </Provider>\n        )\n    }\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './style.scss';\n\nimport App from './components/app/app.component';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}